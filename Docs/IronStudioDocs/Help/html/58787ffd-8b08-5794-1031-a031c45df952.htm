<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ClrInteger Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ClrInteger class" /><meta name="System.Keywords" content="IronRuby.Builtins.ClrInteger class" /><meta name="Microsoft.Help.F1" content="IronRuby.Builtins.ClrInteger" /><meta name="Microsoft.Help.Id" content="T:IronRuby.Builtins.ClrInteger" /><meta name="Description" content="Mixed-in all .NET numeric primitive types that can be widened to 32 bit signed integer (byte, sbyte, short, ushort, int). TODO: we might want to specialize some of the methods to preserve the exact type if possible (like adding byte and byte)." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="IronRuby.Builtins" /><meta name="file" content="58787ffd-8b08-5794-1031-a031c45df952" /><meta name="guid" content="58787ffd-8b08-5794-1031-a031c45df952" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\5c40d2a7-638e-43e6-8a88-431a59427f20.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e58dd4f7-e839-a96b-987f-1fe9bf76a5d1.htm" title="IronRuby.Builtins" tocid="e58dd4f7-e839-a96b-987f-1fe9bf76a5d1">IronRuby.Builtins</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/58787ffd-8b08-5794-1031-a031c45df952.htm" title="ClrInteger Class" tocid="58787ffd-8b08-5794-1031-a031c45df952">ClrInteger Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/b46a4284-cc5e-add9-60ac-c04fdd424799.htm" title="ClrInteger Methods" tocid="b46a4284-cc5e-add9-60ac-c04fdd424799">ClrInteger Methods</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/1dee1fed-afa7-3401-46a1-2b7a06aa0e31.htm" title="ClrInteger Fields" tocid="1dee1fed-afa7-3401-46a1-2b7a06aa0e31">ClrInteger Fields</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>ClrInteger Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Mixed-in all .NET numeric primitive types that can be widened to 32 bit signed integer 
            (byte, sbyte, short, ushort, int). 
            
            TODO: we might want to specialize some of the methods to preserve the exact type if possible (like adding byte and byte).
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST9952D8A1_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9952D8A1_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">IronRuby.Builtins<span id="LST9952D8A1_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST9952D8A1_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ClrInteger</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="e58dd4f7-e839-a96b-987f-1fe9bf76a5d1.htm">IronRuby.Builtins</a><br />
    <strong>Assembly:</strong>
   IronRuby.Libraries (in IronRuby.Libraries.dll) Version: 1.1.3.0 (1.1.3.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EICA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','cs','1','9');return false;">C#</a></div><div id="ID1EICA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','vb','2','9');return false;">VB</a></div><div id="ID1EICA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','cpp','3','9');return false;">C++</a></div><div id="ID1EICA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','fs','4','9');return false;">F#</a></div><div id="ID1EICA_tab5" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','jsh','5','9');return false;">J#</a></div><div id="ID1EICA_tab6" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','jsc','6','9');return false;">JScript</a></div><div id="ID1EICA_tab7" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','js','7','9');return false;">JavaScript</a></div><div id="ID1EICA_tab8" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','xs','8','9');return false;">X#</a></div><div id="ID1EICA_tab9" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EICA','asp','9','9');return false;">ASP.NET</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EICA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EICA');return false;" title="Copy">Copy</a></div></div><div id="ID1EICA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">ClrInteger</span></pre></div><div id="ID1EICA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">ClrInteger</span></pre></div><div id="ID1EICA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">ClrInteger</span> <span class="keyword">abstract</span> <span class="keyword">sealed</span></pre></div><div id="ID1EICA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">[&lt;<span class="identifier">AbstractClassAttribute</span>&gt;]
[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">ClrInteger</span> =  <span class="keyword">class</span> <span class="keyword">end</span></pre></div><div id="ID1EICA_code_Div5" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> <span class="identifier">ClrInteger</span></pre></div><div id="ID1EICA_code_Div6" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">class</span> ClrInteger</pre></div><div id="ID1EICA_code_Div7" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="identifier">IronRuby.Builtins.ClrInteger</span> = <span class="keyword">function</span>();

<span class="identifier">Type</span>.createClass(
	'IronRuby.Builtins.ClrInteger');</pre></div><div id="ID1EICA_code_Div8" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"> <span class="keyword">STATIC</span> <span class="keyword">CLASS</span> <span class="identifier">ClrInteger</span></pre></div><div id="ID1EICA_code_Div9" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve" /></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EICA");</script></div><p>The <span class="selflink">ClrInteger</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f1167433-c9e8-24e4-6d75-a4cbc87d0684.htm">Abs</a></td><td><div class="summary">
            Returns the absolute value of self.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2277bf3f-4ac8-7e96-f1b0-4bd532762ae4.htm">Add(Int32, BigInteger)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="7ba8abf3-eb04-6303-f1e0-d5352c1732ed.htm">Add(Int32, Double)</a></td><td><div class="summary">
            Returns self added to other, where other is Float
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0920a29c-82b0-dd1a-dff9-ae017496ef3d.htm">Add(Int32, Int32)</a></td><td><div class="summary">
            Returns self added to other, where other is Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="dde2133a-5ad9-57a2-1aaf-cbdfe1f96b70.htm">Add(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Returns self added to other.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ee1faa2f-1b76-616a-05f0-a37296feb623.htm">Bit(Int32, BigInteger)</a></td><td><div class="summary">
            Returns the value of the bit at the indexth bit position of self, where index is Bignum
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="fb88c09a-1f08-40a2-dd03-2c65ae6342f4.htm">Bit(Int32, Int32)</a></td><td><div class="summary">
            Returns the value of the bit at the indexth bit position of self, where index is Fixnum
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="75516c78-34a6-cc8c-ad8a-59d79a0ad412.htm">BitwiseAnd(Int32, BigInteger)</a></td><td><div class="summary">
            Performs bitwise AND on self and other, where other is Bignum
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2a36e98a-dd60-5f1e-84ac-cdf9c21d9b1b.htm">BitwiseAnd(Int32, Int32)</a></td><td><div class="summary">
            Performs bitwise AND on self and other, where other is Fixnum
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="1057b198-5877-405f-48ae-47cf3d44cb18.htm">BitwiseAnd(RubyContext, Int32, IntegerValue)</a></td><td><div class="summary">
            Performs bitwise AND on self and other, where other is not Fixnum or Bignum
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="97377404-cb48-f493-15bf-d932729b36b4.htm">BitwiseOr(Int32, BigInteger)</a></td><td><div class="summary">
            Performs bitwise OR on self and other
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="31a29fec-0849-d541-8367-7dff2bfb71b4.htm">BitwiseOr(Int32, Int32)</a></td><td><div class="summary">
            Performs bitwise OR on self and other
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d673f97e-ab91-e0b7-fb88-4c5920425820.htm">BitwiseOr(RubyContext, Int32, IntegerValue)</a></td><td><div class="summary">
            Performs bitwise OR on self and other, where other is not Fixnum or Bignum
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8977aba8-7c66-0be9-6a20-532c55439060.htm">BitwiseXor(Int32, BigInteger)</a></td><td><div class="summary">
            Performs bitwise XOR on self and other
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="fd8f7846-e76d-42b3-afd0-dba4cd7957dc.htm">BitwiseXor(Int32, Int32)</a></td><td><div class="summary">
            Performs bitwise XOR on self and other
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f846d628-1eea-fa6b-9d4a-71dc90804988.htm">BitwiseXor(RubyContext, Int32, IntegerValue)</a></td><td><div class="summary">
            Performs bitwise XOR on self and other, where other is not Fixnum or Bignum
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="23a00b04-58ab-1718-c14c-eda6b220be89.htm">Compare(Int32, Int32)</a></td><td><div class="summary">
            Comparison: Returns -1, 0, or +1 depending on whether self is less than, equal to, or greater than other, where other is Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="694baeee-9651-7431-f650-3835fa7c7080.htm">Compare(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Comparison: Returns -1, 0, or +1 depending on whether self is less than, equal to, or greater than other, where other is not Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="36688688-52ca-3149-6c93-ff241b54bb98.htm">Divide(Int32, Int32)</a></td><td><div class="summary">
            Divides self by other, where other is a Fixnum.
            Aliased as / and div
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0d4ce9ac-3fcd-8ad5-8056-1c4e90fb79cd.htm">Divide(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Divides self by other, where other is not a Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="30b849c4-91b2-cf18-35b5-3b97b558b69b.htm">DivideOp</a></td><td><div class="summary">
            Divides self by other, where other is not a Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="427df0b9-c78f-b179-164b-65d4c5afd5fa.htm">DivMod(Int32, Int32)</a></td><td><div class="summary">
             Returns an array containing the quotient and modulus obtained by dividing self by other.
             </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ef27e782-182b-1e62-e045-c34ec52897d5.htm">DivMod(BinaryOpStorage, BinaryOpStorage, Int32, Object)</a></td><td><div class="summary">
            Returns an array containing the quotient and modulus obtained by dividing self by other.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4ed9e977-ed5b-86b2-cf98-c5c662d5013f.htm">Equal(Int32, Int32)</a></td><td><div class="summary">
            Test whether self is numerically equivalent to other.  (Does not require type equivalence).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8b831a71-0a58-1b21-e30e-a84d0b5e90b8.htm">Equal(BinaryOpStorage, Int32, Object)</a></td><td><div class="summary">
            Test whether self is numerically equivalent to other.  (Does not require type equivalence).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0384fecc-7f6c-6c01-4f93-70e9f1f5c936.htm">FDiv</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a0f4d148-2ac5-bda6-abe0-0bad1d47437f.htm">GreaterThan(Int32, Int32)</a></td><td><div class="summary">
            Returns true if the value of self is greater than other, where other is Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d41a1b65-21bb-dab4-1fa9-019b8ae995a9.htm">GreaterThan(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Returns true if the value of self is greater than other, where other is not Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="c2edfd2c-3c61-27f4-c059-6c40d0faef3a.htm">GreaterThanOrEqual(Int32, Int32)</a></td><td><div class="summary">
            Returns true if the value of self is greater than or equal to other, where other is Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="54c18659-6b5c-626e-5e04-ceb45ae5f420.htm">GreaterThanOrEqual(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Returns true if the value of self is greater than or equal to other, where other is not Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a3f6fd75-5c61-d0ed-a903-518b8cdc31a3.htm">IsZero</a></td><td><div class="summary">
            Returns true if self is zero.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="37da515f-95b5-6ca3-89e0-acabe362b8a0.htm">LeftShift(Int32, Int32)</a></td><td><div class="summary">
            Returns the value after shifting to the left (right if count is negative) the value in self by other bits.
            (where other is Fixnum)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4231a2b8-2565-2d18-ba0b-5f1a7ec679e3.htm">LeftShift(RubyContext, Int32, IntegerValue)</a></td><td><div class="summary">
            Returns the value after shifting to the left (right if count is negative) the value in self by other bits.
            (where other is not Fixnum)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8a818608-07c3-b307-a073-6843f06e93ae.htm">LessThan(Int32, Int32)</a></td><td><div class="summary">
            Returns true if the value of self is less than other, where other is Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="02ba7752-30bd-8a44-bf4e-58dbcebb3c45.htm">LessThan(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Returns true if the value of self is less than other, where other is not Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8884f0ae-78f2-0007-7277-cf08348c7700.htm">LessThanOrEqual(Int32, Int32)</a></td><td><div class="summary">
            Returns true if the value of self is less than or equal to other, where other is Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ff0799df-0828-151d-9b83-b785a8f0590f.htm">LessThanOrEqual(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Returns true if the value of self is less than or equal to other, where other is not Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ed775d10-d38b-48af-b1a3-c08c497f3d90.htm">Minus</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="55f6bea6-7126-16c0-4622-111c44279118.htm">Modulo(Int32, Int32)</a></td><td><div class="summary">
            Returns self modulo other, where other is Fixnum.  See <span class="nolink">[!:FloatOps.Divmod]</span> for more information.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="3ab90c17-c0fc-3076-f15b-4e75649299d6.htm">Modulo(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Returns self modulo other, where other is not Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="641bd31a-7528-d2aa-104f-2762d4fbefa2.htm">ModuloOp</a></td><td><div class="summary">
            Returns self % other, where other is not Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a972b289-753f-b4e1-8e01-8fa2b18c6ca5.htm">Multiply(Int32, BigInteger)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9a3d04fd-1613-e9cf-37bf-197a87cd8ddf.htm">Multiply(Int32, Double)</a></td><td><div class="summary">
            Returns self multiplied by other, where other is Float.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="c87f83d9-43d0-1fc1-5068-fb39e3518847.htm">Multiply(Int32, Int32)</a></td><td><div class="summary">
            Returns self multiplied by other, where other is Fixnum or Bignum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="873cdc63-c580-808e-50e2-f052a1082676.htm">Multiply(BinaryOpStorage, BinaryOpStorage, Object, Object)</a></td><td><div class="summary">
            Returns self multiplied by other.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4f013bc9-2808-0fe7-1a6e-cd54beea826d.htm">Narrow</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="5853f7f2-2cf1-b5c8-60fd-2eda00ff0e14.htm">OnesComplement</a></td><td><div class="summary">
            Returns the ones complement of self; a number where each bit is flipped. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="48a8aa9e-9efa-f1a3-56f1-2614401cbebb.htm">Power(Int32, Double)</a></td><td><div class="summary">
            Raises self to the other power, which may be negative or fractional.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4df9706b-ea19-7b60-79ca-60ad6de5483f.htm">Power(Int32, Int32)</a></td><td><div class="summary">
            Raises self to the other power, which may be negative.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="b2253ccc-48ec-d01e-0769-a70cd945b372.htm">Power(BinaryOpStorage, BinaryOpStorage, RubyContext, Int32, Object)</a></td><td><div class="summary">
            Raises self to the other power, where other is not Integer or Float.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="027699a4-39af-621c-9b5c-260ca6f24520.htm">Quotient(Int32, Int32)</a></td><td><div class="summary">
            Returns the floating point result of dividing self by other, where other is Fixnum. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4895c37e-dc58-2d8b-4ea8-da6ecc43a1f1.htm">Quotient(BinaryOpStorage, BinaryOpStorage, Int32, Object)</a></td><td><div class="summary">
            Returns the floating point result of dividing self by other, where other is not Fixnum. 
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="e95494e8-a698-8b63-9a78-7e24b5789a7b.htm">RightShift(Int32, Int32)</a></td><td><div class="summary">
            Returns the value after shifting to the right (left if count is negative) the value in self by other bits.
            (where other is Fixnum)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="78e78ffd-ba5a-66ec-8ead-3ca61606ace6.htm">RightShift(RubyContext, Int32, IntegerValue)</a></td><td><div class="summary">
            Returns the value after shifting to the right (left if count is negative) the value in self by other bits.
            (where other is not Fixnum)
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2d67c093-c2e5-9216-2da5-2d023769b6d5.htm">Subtract(Int32, BigInteger)</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2c96df92-51d5-610c-5327-e07352b5d77a.htm">Subtract(Int32, Double)</a></td><td><div class="summary">
            Subtracts other from self (i.e. self - other), where other is Float.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="4a5e497e-3556-7bae-97ab-6b12fafb0c05.htm">Subtract(Int32, Int32)</a></td><td><div class="summary">
            Subtracts other from self (i.e. self - other), where other is Fixnum.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="127ae12b-7a5f-95e6-9c67-4b4d7032f5a6.htm">Subtract(BinaryOpStorage, BinaryOpStorage, RubyContext, Object, Object)</a></td><td><div class="summary">
            Subtracts other from self (i.e. self - other), where other is not Fixnum, or Float.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="87d3137f-598c-7a27-7135-12ce0408479a.htm">ToFloat</a></td><td><div class="summary">
            Convert self to Float.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="5454b581-64f2-3b0a-8206-ce34a68ea4eb.htm">ToString(Object)</a></td><td><div class="summary">
            Returns a string representing the value of self using base 10.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="c70f1adc-f4c2-f0fd-fede-925ddf300f76.htm">ToString(BigInteger, Int32)</a></td><td><div class="summary">
            Returns a string representing the value of self using base radix.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Fields</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="fieldList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="6e2a936b-5c0f-0138-9d69-013ce7949d69.htm">MinusOne</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="f3ee1186-5f49-d43b-827a-7d1b560da8ef.htm">One</a></td><td /></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubfield.gif" alt="Public field" title="Public field" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="ca1eb630-c242-fda0-d063-eaaa66f3fe9e.htm">Zero</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="e58dd4f7-e839-a96b-987f-1fe9bf76a5d1.htm">IronRuby.Builtins Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>