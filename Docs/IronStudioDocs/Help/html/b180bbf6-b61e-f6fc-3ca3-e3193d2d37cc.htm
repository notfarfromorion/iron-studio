<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ZStream.inflate Method </title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="inflate method" /><meta name="System.Keywords" content="ZStream.inflate method" /><meta name="Microsoft.Help.F1" content="ComponentAce.Compression.Libs.ZLib.ZStream.inflate" /><meta name="Microsoft.Help.Id" content="M:ComponentAce.Compression.Libs.ZLib.ZStream.inflate(ComponentAce.Compression.Libs.ZLib.FlushStrategy)" /><meta name="Description" content="This method decompresses as much data as possible, and stops when the input buffer () becomes empty or the output buffer () becomes full. It may some introduce some output latency (reading input without producing any output) except when forced to flush." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="ComponentAce.Compression.Libs.ZLib" /><meta name="file" content="b180bbf6-b61e-f6fc-3ca3-e3193d2d37cc" /><meta name="guid" content="b180bbf6-b61e-f6fc-3ca3-e3193d2d37cc" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">A Sandcastle Documented Class Library<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html\5c40d2a7-638e-43e6-8a88-431a59427f20.htm" title="A Sandcastle Documented Class Library" tocid="roottoc">A Sandcastle Documented Class Library</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/b4eb1d19-5a26-f029-2759-baba14fe00d9.htm" title="ComponentAce.Compression.Libs.ZLib" tocid="b4eb1d19-5a26-f029-2759-baba14fe00d9">ComponentAce.Compression.Libs.ZLib</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/74d7b710-c0f0-fc79-374e-7fd000c7e480.htm" title="ZStream Class" tocid="74d7b710-c0f0-fc79-374e-7fd000c7e480">ZStream Class</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/f312e19f-776f-a8e0-b5c1-8a8c34fa6d75.htm" title="ZStream Methods" tocid="f312e19f-776f-a8e0-b5c1-8a8c34fa6d75">ZStream Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/2b557ed5-924c-0996-d10e-c33fe8599601.htm" title="deflate Method " tocid="2b557ed5-924c-0996-d10e-c33fe8599601">deflate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/47584f7f-380e-e72a-b4d0-b857006501eb.htm" title="deflateEnd Method " tocid="47584f7f-380e-e72a-b4d0-b857006501eb">deflateEnd Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/e3695110-2cef-497c-d7fc-7c3c882b44b0.htm" title="deflateInit Method " tocid="e3695110-2cef-497c-d7fc-7c3c882b44b0">deflateInit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/4fadd6f0-be99-7d4e-1cf3-13ce2058b287.htm" title="deflateParams Method " tocid="4fadd6f0-be99-7d4e-1cf3-13ce2058b287">deflateParams Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/f64acb48-1964-52f8-8108-a0acef2c005a.htm" title="deflateSetDictionary Method " tocid="f64acb48-1964-52f8-8108-a0acef2c005a">deflateSetDictionary Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/edafb114-f28e-ed4f-f0fb-34f008d079ab.htm" title="flush_pending Method " tocid="edafb114-f28e-ed4f-f0fb-34f008d079ab">flush_pending Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/0373f355-510b-2cd2-18a6-f9195a8e10aa.htm" title="free Method " tocid="0373f355-510b-2cd2-18a6-f9195a8e10aa">free Method </a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/b180bbf6-b61e-f6fc-3ca3-e3193d2d37cc.htm" title="inflate Method " tocid="b180bbf6-b61e-f6fc-3ca3-e3193d2d37cc">inflate Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/18a8991b-95cb-3dad-5cff-ed7fd31521a2.htm" title="inflateEnd Method " tocid="18a8991b-95cb-3dad-5cff-ed7fd31521a2">inflateEnd Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/44cfa5df-6a46-227b-16bc-28bbcdab74c1.htm" title="inflateInit Method " tocid="44cfa5df-6a46-227b-16bc-28bbcdab74c1">inflateInit Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c3178a92-a883-88b4-426d-54347f2baf5b.htm" title="inflateSetDictionary Method " tocid="c3178a92-a883-88b4-426d-54347f2baf5b">inflateSetDictionary Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/62e393b9-4fa0-b130-f189-254c79777c24.htm" title="inflateSync Method " tocid="62e393b9-4fa0-b130-f189-254c79777c24">inflateSync Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/c24c63ab-4d27-dc28-912b-ea8a6f9ae43e.htm" title="read_buf Method " tocid="c24c63ab-4d27-dc28-912b-ea8a6f9ae43e">read_buf Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>ZStream<span id="LST7E2B04BA_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7E2B04BA_0?cpp=::|nu=.");</script>inflate Method </h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p>This method decompresses as much data as possible, and stops when the input buffer (<a href="78632efc-658e-2a47-5771-74b276ab7cb4.htm">next_in</a>) becomes empty or 
            the output buffer (<a href="61384c26-d9cf-bf5c-6ee1-da6b28a3fd0d.htm">next_out</a>) becomes full. It may some introduce some output latency (reading input without producing any output) 
            except when forced to flush. </p><p>The detailed semantics are as follows. <span class="selflink">inflate(FlushStrategy)</span> performs one or both of the following actions: </p><p><ul><li>Decompress more input starting at <a href="78632efc-658e-2a47-5771-74b276ab7cb4.htm">next_in</a> and update <a href="78632efc-658e-2a47-5771-74b276ab7cb4.htm">next_in</a> and <a href="4818803f-e176-f3d2-f2ee-1c008c458700.htm">avail_in</a> 
            accordingly. If not all input can be processed (because there is not enough room in the output buffer), <a href="78632efc-658e-2a47-5771-74b276ab7cb4.htm">next_in</a> is updated and 
            processing will resume at this point for the next call of <span class="selflink">inflate(FlushStrategy)</span>. </li><li>Provide more output starting at <a href="61384c26-d9cf-bf5c-6ee1-da6b28a3fd0d.htm">next_out</a> and update <a href="61384c26-d9cf-bf5c-6ee1-da6b28a3fd0d.htm">next_out</a> and <a href="e624589f-c20d-b6ea-745e-04f0d8300181.htm">avail_out</a> 
            accordingly. <span class="selflink">inflate(FlushStrategy)</span> provides as much output as possible, until there is no more input data or no more space in 
            the output buffer (see below about the <span class="parameter">flush</span> parameter).</li></ul></p></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="b4eb1d19-5a26-f029-2759-baba14fe00d9.htm">ComponentAce.Compression.Libs.ZLib</a><br />
    <strong>Assembly:</strong>
   IronPython.Modules (in IronPython.Modules.dll) Version: 2.7<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EICA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','cs','1','9');return false;">C#</a></div><div id="ID0EICA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','vb','2','9');return false;">VB</a></div><div id="ID0EICA_tab3" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','cpp','3','9');return false;">C++</a></div><div id="ID0EICA_tab4" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','fs','4','9');return false;">F#</a></div><div id="ID0EICA_tab5" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','jsh','5','9');return false;">J#</a></div><div id="ID0EICA_tab6" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','jsc','6','9');return false;">JScript</a></div><div id="ID0EICA_tab7" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','js','7','9');return false;">JavaScript</a></div><div id="ID0EICA_tab8" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','xs','8','9');return false;">X#</a></div><div id="ID0EICA_tab9" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EICA','asp','9','9');return false;">ASP.NET</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EICA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EICA');return false;" title="Copy">Copy</a></div></div><div id="ID0EICA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">int</span> <span class="identifier">inflate</span>(
	<span class="identifier">FlushStrategy</span> <span class="parameter">flush</span>
)</pre></div><div id="ID0EICA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">inflate</span> ( 
	<span class="parameter">flush</span> <span class="keyword">As</span> <span class="identifier">FlushStrategy</span>
) <span class="keyword">As</span> <span class="identifier">Integer</span></pre></div><div id="ID0EICA_code_Div3" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span>:
<span class="identifier">int</span> <span class="identifier">inflate</span>(
	<span class="identifier">FlushStrategy</span> <span class="parameter">flush</span>
)</pre></div><div id="ID0EICA_code_Div4" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">member</span> <span class="identifier">inflate</span> : 
        <span class="parameter">flush</span> : <span class="identifier">FlushStrategy</span> <span class="keyword">-&gt;</span> <span class="identifier">int</span> 
</pre></div><div id="ID0EICA_code_Div5" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">int</span> <span class="identifier">inflate</span>(
	<span class="identifier">FlushStrategy</span> <span class="parameter">flush</span>
)</pre></div><div id="ID0EICA_code_Div6" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">function</span> <span class="identifier">inflate</span>(
	<span class="parameter">flush</span> : <span class="identifier">FlushStrategy</span>
) : <span class="identifier">int</span></pre></div><div id="ID0EICA_code_Div7" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">function</span> <span class="identifier">inflate</span>(<span class="parameter">flush</span>);</pre></div><div id="ID0EICA_code_Div8" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"> <span class="keyword">METHOD</span> <span class="identifier">inflate</span>(
	<span class="parameter">flush</span> <span class="keyword">AS</span> <span class="identifier">FlushStrategy</span>
) <span class="keyword">AS</span> <span class="identifier">LONG</span></pre></div><div id="ID0EICA_code_Div9" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve" /></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EICA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">flush</span></dt><dd>Type: <a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">ComponentAce.Compression.Libs.ZLib<span id="LST7E2B04BA_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7E2B04BA_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>FlushStrategy</a><br /><a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">Flush strategy</a> to use.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="http://msdn2.microsoft.com/en-us/library/td2s409d" target="_blank">Int32</a><br /><span class="selflink">inflate(FlushStrategy)</span> returns <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_OK</a> if some progress has been made (more input processed or more output produced), 
            <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_STREAM_END</a> if the end of the compressed data has been reached and all uncompressed output has been produced, 
            <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_NEED_DICT</a> if a preset dictionary is needed at this point, <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_DATA_ERROR</a> if 
            the input data was corrupted (input stream not conforming to the ZLib format or incorrect adler32 checksum), 
            <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_STREAM_ERROR</a> if the stream structure was inconsistent (for example if <a href="78632efc-658e-2a47-5771-74b276ab7cb4.htm">next_in</a> or 
            <a href="61384c26-d9cf-bf5c-6ee1-da6b28a3fd0d.htm">next_out</a> was <span class="code">null</span>), <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_MEM_ERROR</a> if there was not enough memory, 
            <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_BUF_ERROR</a> if no progress is possible or if there was not enough room in the output buffer 
            when <a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">Z_FINISH</a> is used. In the <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_DATA_ERROR</a> case, the application 
            may then call <a href="62e393b9-4fa0-b130-f189-254c79777c24.htm">inflateSync<span id="LST7E2B04BA_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7E2B04BA_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> to look for a good compression block.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Before the call of <span class="selflink">inflate(FlushStrategy)</span>, the application should ensure that at least one of the actions is possible, by providing 
            more input and/or consuming more output, and updating the next_* and avail_* values accordingly. The application can consume the uncompressed 
            output when it wants, for example when the output buffer is full (<span class="code">avail_out == 0</span>), or after each call of <span class="selflink">inflate(FlushStrategy)</span>. 
            If <span class="selflink">inflate(FlushStrategy)</span> returns <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_OK</a> and with zero <a href="e624589f-c20d-b6ea-745e-04f0d8300181.htm">avail_out</a>, it must be called again 
            after making room in the <a href="61384c26-d9cf-bf5c-6ee1-da6b28a3fd0d.htm">output buffer</a> because there might be more output pending. </p><p>If the parameter <span class="parameter">flush</span> is set to <a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">Z_SYNC_FLUSH</a>, <span class="selflink">inflate(FlushStrategy)</span> flushes 
            as much output as possible to the output buffer. The flushing behavior of <span class="selflink">inflate(FlushStrategy)</span> is not specified for values of 
            the <span class="parameter">flush</span> parameter other than <a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">Z_SYNC_FLUSH</a> and <a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">Z_FINISH</a>, 
            but the current implementation actually flushes as much output as possible anyway. </p><p><span class="selflink">inflate(FlushStrategy)</span> should normally be called until it returns <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_STREAM_END</a> or an error. 
            However if all decompression is to be performed in a single step (a single call of inflate), the parameter <span class="parameter">flush</span> 
            should be set to <a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">Z_FINISH</a>. In this case all pending input is processed and all pending output is flushed; 
            <a href="e624589f-c20d-b6ea-745e-04f0d8300181.htm">avail_out</a> must be large enough to hold all the uncompressed data. (The size of the uncompressed data may have been 
            saved by the compressor for this purpose.) The next operation on this stream must be <a href="18a8991b-95cb-3dad-5cff-ed7fd31521a2.htm">inflateEnd<span id="LST7E2B04BA_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7E2B04BA_3?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a> to deallocate the decompression 
            state. The use of <a href="700e4434-512e-8b5b-4188-a475766df2d7.htm">Z_FINISH</a> is never required, but can be used to inform <span class="selflink">inflate(FlushStrategy)</span> that a faster 
            routine may be used for the single <span class="selflink">inflate(FlushStrategy)</span> call. </p><p>If a preset dictionary is needed at this point (see <a href="c3178a92-a883-88b4-426d-54347f2baf5b.htm">inflateSetDictionary(<span id="LST7E2B04BA_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7E2B04BA_4?cpp=array&lt;");</script>Byte<span id="LST7E2B04BA_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST7E2B04BA_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a>), <span class="selflink">inflate(FlushStrategy)</span> sets strm-adler 
            to the adler32 checksum of the dictionary chosen by the compressor and returns <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_NEED_DICT</a>; otherwise it 
            sets strm-&gt;adler to the adler32 checksum of all output produced so far (that is, <a href="3a4485f5-1315-a0f5-fb01-fd2ed3faf566.htm">total_out</a> bytes) and returns
            <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_OK</a>, <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_STREAM_END</a> or an error code as described below. At the end of the stream, 
            <span class="selflink">inflate(FlushStrategy)</span>) checks that its computed adler32 checksum is equal to that saved by the compressor and returns
            <a href="db4fda9c-a804-bbd2-e0bf-5e47fe4cff00.htm">Z_STREAM_END</a> only if the checksum is correct.</p></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="74d7b710-c0f0-fc79-374e-7fd000c7e480.htm">ZStream Class</a></div><div class="seeAlsoStyle"><a href="b4eb1d19-5a26-f029-2759-baba14fe00d9.htm">ComponentAce.Compression.Libs.ZLib Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>